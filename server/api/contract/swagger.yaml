swagger: "2.0"
info:
  version: "0.0.1"
  title: Ooh Media Swagger API contract
host: localhost:3000
basePath: /api
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.

     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.

     The following syntax must be used in the 'Authorization' header :

         Bearer xxxxxx.yyyyyyy.zzzzzz
consumes:
  - application/json
produces:
  - application/json
paths:
  /login/{role}:
    x-swagger-router-controller: main-controller
    post:
      operationId: loginPost
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /unprotected:
    x-swagger-router-controller: main-controller
    get:
      operationId: unprotectedGet
      description: "Unprotected endpoint"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
  /shoppingCenter:
    x-swagger-router-controller: shopping-center
    get:
      operationId: fetchCenters
      description: "Protected endpoint to get list of all Shopping Centers, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ShoppingCenters"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createCenter
      description: "Protected endpoint to create a Shopping Center, only accessible to 'admins'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - in: body
          name: shoppingCenter
          required: true
          schema:
            $ref: "#/definitions/ShoppingCenter"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ShoppingCenter"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /shoppingCenter/{centerId}:
    x-swagger-router-controller: shopping-center
    put:
      operationId: updateCenter
      description: "Protected endpoint to update a Shopping Center, only accessible to 'admins'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - in: path
          name: centerId
          description: The Shopping Center Id
          required: true
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ShoppingCenter"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Invalid Request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteCenter
      description: "Protected endpoint to update a Shopping Center, only accessible to 'admins'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - in: path
          name: centerId
          description: The Shopping Center Id
          required: true
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ShoppingCenter"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Invalid Request"
          schema:
            $ref: "#/definitions/Error"
  /shoppingCenter/{centerNumber}/asset:
    x-swagger-router-controller: asset
    get:
      operationId: fetchAssetsByCenterNumber
      description: "Protected endpoint to fetch all assets in Shopping Center, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - in: path
          name: centerNumber
          description: The Shopping Center Number
          required: true
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Assets"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createAsset
      description: "Protected endpoint to create a Asset in Shopping Center, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - in: path
          name: centerNumber
          description: The Shopping Center Number
          required: true
          type: string
        - name: asset
          in: body
          required: true
          schema:
            $ref: "#/definitions/Asset"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Asset"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /shoppingCenter/asset/{assetId}:
    x-swagger-router-controller: asset
    put:
      operationId: updateAsset
      description: "Protected endpoint to update an asset, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - users
      parameters:
        - in: path
          name: assetId
          description: The Asset Id
          required: true
          type: string
        - name: asset
          in: body
          required: true
          schema:
            $ref: "#/definitions/Asset"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Asset"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Invalid Request"
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteAsset
      description: "Protected endpoint to delete a Asset, only accessible to 'admins'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - in: path
          name: assetId
          description: The Asset Id
          required: true
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Asset"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Invalid Request"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
  Assets:
    type: array
    items:
      $ref: "#/definitions/Asset"
    description: the array of shopping center objects returned
  Asset:
    type: object
    required:
      - name
      - dimension
      - associatedCenter
      - location
      - status
    properties:
      name:
        type: string
      _id:
        type: ["string", "null"]
      associatedCenter:
        type: integer
        format: int32
      dimension:
        type: string
      location:
        type: string
      updatedBy:
        type: string
      status:
        type: string
      _v:
        type: ["string", "null"]
  ShoppingCenters:
    type: array
    items:
      $ref: "#/definitions/ShoppingCenter"
    description: the array of shopping center objects returned
  ShoppingCenter:
    type: object
    required:
      - name
      - centerNumber
      - address
      - status
    properties:
      name:
        type: string
      centerNumber:
        type: integer
        format: int32
      _id:
        type: ["string", "null"]
      address:
        type: string
      updatedBy:
        type: string
      status:
        type: string
      _v:
        type: ["string", "null"]
